import config
import telebot
import random
import requests
import weath

from telebot import types

bot = telebot.TeleBot(config.TOKEN)
url = 'http://api.openweathermap.org/data/2.5/weather'
api_weather = config.WEATHER

@bot.message_handler(commands=["start"])
def welcome(message):
    sti = open("static/welcome.webp", 'rb')
    bot.send_sticker(message.chat.id, sti)

    # Keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
    item3 = types.KeyboardButton("‚õÖÔ∏è –ü–æ–≥–æ–¥–∞")

    markup.add(item1, item2, item3)

    bot.send_message(
        message.chat.id,
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç .".format(message.from_user, bot.get_me()),
        parse_mode='html', reply_markup=markup
    )



@bot.message_handler(content_types=["text"])
def start_message(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0,100)))
        elif message.text == '‚õÖÔ∏è –ü–æ–≥–æ–¥–∞':
            # bot.send_message(message.chat.id, "–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ.")
            # weath.weather_send

            def weather_send(message):
                s_city = message.text

                params = {'APPID': api_weather, 'q': s_city, 'units': 'metric'}
                result = requests.get(url, params=params)
                weather = result.json()

                bot.send_message(message.chat.id, "–í –≥–æ—Ä–æ–¥–µ " + str(weather['name'])
                                 + "–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞" + str(float(weather["main"]['temp'])) + " ¬∞C\n"
                                 + "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ " + str(float(weather["main"]['temp_max'])) + " ¬∞C\n"
                                 + "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞" + str(float(weather["main"]['temp_min'])) + " ¬∞C\n"
                                 + "–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞" + str(float(weather["wind"]['speed'])) + " \n")

                if weather["main"]['temp'] < 0:
                    bot.send_message(message.chat.id, "–ù–∞–¥–µ–Ω—å –ª—É—á—à–µ –ø—É—Ö–æ–≤–∏–∫.")
                elif weather["main"]['temp'] > 20:
                    bot.send_message(message.chat.id, "–®–æ—Ä—Ç—ã –∏ —Ñ—É—Ç–±–æ–ª–∫–∞.")
                else:
                    bot.send_message(message.chat.id, "–ü–æ—Å–º–æ—Ç—Ä–∏ –≤–æ —á—Ç–æ –¥—Ä—É–≥–∏–µ –æ–¥–µ—Ç—ã.")




        elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–ö–∞–∫ –≤ —Å–∫–∞–∑–∫–µ.", callback_data='good')
            item2 = types.InlineKeyboardButton("–ë—ã–≤–∞–ª–æ –∏ –ª—É—á—à–µ.", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–ê —Ç—ã —É–≥–∞–¥–∞–π', reply_markup=markup)
        else:
            bot.send_message(message.chat.id,  message.text)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–ß–µ–º –¥–∞–ª—å—à–µ, —Ç–µ–º —Å—Ç—Ä–∞—à–Ω–µ–µ.')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ù–æ –∫–∞–∫ —Ä–∞–Ω—å—à–µ —É–∂–µ –Ω–µ –±—É–¥–µ—Ç.')

            # remove inline buttons
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                text='–ü–æ–ø—ã—Ç–∫–∞ –Ω–µ–ø–ª–æ—Ö–∞—è.',reply_markup=None)

            # show alert
            # bot.answer_callback_query(chat_id=call.message.chat.id, show_alert=False, text='MAZAFAKA!11')

    except Exception as e:
        print(repr(e))

bot.polling(none_stop=True)

